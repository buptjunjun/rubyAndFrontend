#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.expand_path('../simple_types.rb',__FILE__)

module MultiplicationService
  class Client
    include ::Thrift::Client

    def multiply(n1, n2)
      send_multiply(n1, n2)
      return recv_multiply()
    end

    def send_multiply(n1, n2)
      send_message('multiply', Multiply_args, :n1 => n1, :n2 => n2)
    end

    def recv_multiply()
      result = receive_message(Multiply_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'multiply failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_multiply(seqid, iprot, oprot)
      args = read_args(iprot, Multiply_args)
      result = Multiply_result.new()
      result.success = @handler.multiply(args.n1, args.n2)
      write_result(result, oprot, 'multiply', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Multiply_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    N1 = 1
    N2 = 2

    FIELDS = {
      N1 => {:type => ::Thrift::Types::I32, :name => 'n1'},
      N2 => {:type => ::Thrift::Types::I32, :name => 'n2'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Multiply_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::I32, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

